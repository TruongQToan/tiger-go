let
type tree = {key: int, children: treelist}
type treelist = {hd: tree, tl: treelist}

function treeLeaves(t: tree): int =
if t = nil then 1 else treelistLeaves(t.children)

function treelistLeaves(L: treelist): int =
if L = nil then 0 else treeLeaves(L.hd) + treelistLeaves(L.tl)

var z := tree {key = 0, children = nil}
var y := treelist {hd = z, tl = nil}
var x := tree {key = 0, children = y}
in
x
end
